# Template for zipping and deploying Python 3.8 spawner function to Azure
stages:
- stage: Build
  displayName: Build function

  jobs:
  - job: Build
    displayName: Build function

    steps:
    - bash: |
        if [ -f extensions.csproj ]
        then
            dotnet build extensions.csproj --runtime ubuntu.16.04-x64 --output ./bin
        fi
      workingDirectory: $(WORKING_DIRECTORY)
      displayName: 'Build extensions'

    - task: UsePythonVersion@0
      displayName: 'Use Python 3.8'
      inputs:
        versionSpec: 3.8

    - bash: |
        pip install --target="./.python_packages/lib/site-packages" -r ./requirements.txt
      workingDirectory: $(WORKING_DIRECTORY)
      displayName: 'Install application dependencies'

    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(WORKING_DIRECTORY)'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true

    - publish: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      artifact: drop

- stage: Deploy
  displayName: Deploy function stage
  dependsOn: Build
  condition: succeeded()

  jobs:
  - deployment: Deploy
    displayName: Deploy function
    environment: $(DEPLOY_ENVIRONMENT)

    strategy:
      runOnce:
        deploy:
          steps:
          - checkout: self
          - task: AzureFunctionApp@1
            displayName: 'Azure functions app deploy'
            inputs:
              azureSubscription: '$(AZURE_SUBSCRIPTION)'
              appType: functionAppLinux
              appName: $(FUNCTIONAPPNAME)
              package: '$(Pipeline.Workspace)/drop/$(Build.BuildId).zip'